----------
Title: Bonfire: Mutations
----------
http://freecodecamp.com/challenges/Bonfire:%20Mutations?solution=function%20mutation(arr)%20%7B%0Aarr1%20%3D%20arr%5B0%5D.toLowerCase().split(%27%27)%0Aarr2%20%3D%20arr%5B1%5D.toLowerCase().split(%27%27)%0Afor(var%20i%20%3D%200%3B%20i%20%3C%20arr2.length%3B%20i%2B%2B)%20%7B%0A%09if%20(arr1.indexOf(arr2%5Bi%5D)%20%3D%3D%20-1)%20%7B%20return%20false%3B%20%7D%0A%7D%0A%09return%20true%3B%0A%7D%0Amutation(%5B%22abcdefgh%22%2C%20%22hE%22%5D%2C%20%22%22)%3B%0A


----------
Instructions:
----------
Return true if the string in the first element of the array contains all of the letters of the string in the second element of the array.For example, ["hello", "Hello"], should return true because all of the letters in the second string are present in the first, ignoring case.The arguments ["hello", "hey"] should return false because the string "hello" does not contain a "y".Lastly, ["Alien", "line"], should return true because all of the letters in "line" are present in "Alien".Remember to use Read-Search-Ask if you get stuck. Write your own code.

----------
Answer:
----------
function mutation(arr) {
arr1 = arr[0].toLowerCase().split('')
arr2 = arr[1].toLowerCase().split('')
for(var i = 0; i < arr2.length; i++) {
	if (arr1.indexOf(arr2[i]) == -1) { return false; }
}
	return true;
}
mutation(["abcdefgh", "hE"], "");

